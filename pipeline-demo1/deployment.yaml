apiVersion: apps/v1
kind: Deployment
metadata:
  name: ec-item
  namespace: ec
spec:
  minReadySeconds: 30
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: ec-item
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ec-item
        version: ${VERSION}
      annotations:
        log-to-loki: 'true'
    spec:
      # nodeSelector:
      #   nodeclass: Testing      
      # tolerations:
      # - effect: NoExecute
      #   key: dedicated
      #   operator: Equal
      #   value: Testing
      # terminationGracePeriodSeconds: 60s
      containers:
      - env:
        - name: CONFIG_URI
          value: http://config.default:8888
        - name: CONFIG_PROFILE
          value: dev-ec
        - name: VERSION
          value: ${VERSION}
        - name: GATEWAY_HOST
          value: api.dev.sayweee.net
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: 030689778721.dkr.ecr.us-west-2.amazonaws.com/dev/ec-item:${VERSION}
        imagePullPolicy: Always
        name: ec-item
        ports:
        - containerPort: 8080
          name: main-port
          protocol: TCP
        resources:
          limits:
            cpu: 2000m
            memory: 5000Mi
          requests:
            cpu: 50m
            memory: 500Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        livenessProbe:
          httpGet:
            path: /item/actuator/info
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
        readinessProbe:
          httpGet:
            path: /item/actuator/info
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          timeoutSeconds: 1
          periodSeconds: 10
          successThreshold: 1
          failureThreshold: 30
---
apiVersion: v1
kind: Service
metadata:
  name: core-migo-agent
  namespace: central
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: main-port
  selector:
    app: core-migo-agent

